#include <SFML/Graphics.hpp>
#include <SFML/Config.hpp>
#include <iostream>
#include "Agents/Pakman/Pakman.hpp"
#include "Agents/Constants.hpp"
#include "Maze/Maze.hpp"
#include "Pellet/Pellet.hpp"

const sf::Vector2f WINDOW_SIZE = {1008, 1023};
const sf::Vector2f PAKMAN_START_POSITION = {486, 775.5};
const int AGENT_SPEED_NORMAL = 250;

const int ROWS = 31;
const int COLS = 28;
const std::vector<std::vector<int>> MAP = {
    {  2, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 44, 43, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,  1 },
    {  4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  3 },
    {  4, -1, 24, 15, 15, 23, -1, 24, 15, 15, 15, 23, -1, 26, 25, -1, 24, 15, 15, 15, 23, -1, 24, 15, 15, 23, -1,  3 },
    {  4, -2, 25,  0,  0, 26, -1, 25,  0,  0,  0, 26, -1, 26, 25, -1, 25,  0,  0,  0, 26, -1, 25,  0,  0, 26, -2,  3 },
    {  4, -1, 28, 21, 21, 27, -1, 28, 21, 21, 21, 27, -1, 28, 27, -1, 28, 21, 21, 21, 27, -1, 28, 21, 21, 27, -1,  3 },
    {  4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  3 },
    {  4, -1, 24, 15, 15, 23, -1, 24, 23, -1, 24, 15, 15, 15, 15, 15, 15, 23, -1, 24, 23, -1, 24, 15, 15, 23, -1,  3 },
    {  4, -1, 28, 21, 21, 27, -1, 26, 25, -1, 28, 21, 21, 36, 35, 21, 21, 27, -1, 26, 25, -1, 28, 21, 21, 27, -1,  3 },
    {  4, -1, -1, -1, -1, -1, -1, 26, 25, -1, -1, -1, -1, 26, 25, -1, -1, -1, -1, 26, 25, -1, -1, -1, -1, -1, -1,  3 },
    {  6, 13, 13, 13, 13, 23, -1, 26, 37, 15, 15, 23,  0, 26, 25,  0, 24, 15, 15, 38, 25, -1, 24, 13, 13, 13, 13,  5 },
    {  0,  0,  0,  0,  0,  4, -1, 26, 35, 21, 21, 27,  0, 28, 27,  0, 28, 21, 21, 36, 25, -1,  3,  0,  0,  0,  0,  0 },
    {  0,  0,  0,  0,  0,  4, -1, 26, 25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 26, 25, -1,  3,  0,  0,  0,  0,  0 },
    {  0,  0,  0,  0,  0,  4, -1, 26, 25,  0, 30, 13, 34,  0,  0, 33, 13, 29,  0, 26, 25, -1,  3,  0,  0,  0,  0,  0 },
    { 11, 11, 11, 11, 11, 27, -1, 28, 27,  0,  3,  0,  0,  0,  0,  0,  0,  4,  0, 28, 27, -1, 28, 11, 11, 11, 11, 11 },
    {  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  3,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0 },
    { 13, 13, 13, 13, 13, 23, -1, 24, 23,  0,  3,  0,  0,  0,  0,  0,  0,  4,  0, 24, 23, -1, 24, 13, 13, 13, 13, 13 },
    {  0,  0,  0,  0,  0,  4, -1, 26, 25,  0, 32, 11, 11, 11, 11, 11, 11, 31,  0, 26, 25, -1,  3,  0,  0,  0,  0,  0 },
    {  0,  0,  0,  0,  0,  4, -1, 26, 25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 26, 25, -1,  3,  0,  0,  0,  0,  0 },
    {  0,  0,  0,  0,  0,  4, -1, 26, 25,  0, 24, 15, 15, 15, 15, 15, 15, 23,  0, 26, 25, -1,  3,  0,  0,  0,  0,  0 },
    {  2, 11, 11, 11, 11, 27, -1, 28, 27,  0, 28, 21, 21, 36, 35, 21, 21, 27,  0, 28, 27, -1, 28, 11, 11, 11, 11,  1 },
    {  4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  3 },
    {  4, -1, 24, 15, 15, 23, -1, 24, 15, 15, 15, 23, -1, 26, 25, -1, 24, 15, 15, 15, 23, -1, 24, 15, 15, 23, -1,  3 },
    {  4, -1, 28, 21, 36, 25, -1, 28, 21, 21, 21, 27, -1, 28, 27, -1, 28, 21, 21, 21, 27, -1, 26, 35, 21, 27, -1,  3 },
    {  4, -2, -1, -1, 26, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, 25, -1, -1, -2,  3 },
    {  8, 15, 23, -1, 26, 25, -1, 24, 23, -1, 24, 15, 15, 15, 15, 15, 15, 23, -1, 24, 23, -1, 26, 25, -1, 24, 15,  7 },
    { 10, 21, 27, -1, 28, 27, -1, 26, 25, -1, 28, 21, 21, 36, 35, 21, 21, 27, -1, 26, 25, -1, 28, 27, -1, 28, 21,  9 },
    {  4, -1, -1, -1, -1, -1, -1, 26, 25, -1, -1, -1, -1, 26, 25, -1, -1, -1, -1, 26, 25, -1, -1, -1, -1, -1, -1,  3 },
    {  4, -1, 24, 15, 15, 15, 15, 38, 37, 15, 15, 23, -1, 26, 25, -1, 24, 15, 15, 38, 37, 15, 15, 15, 15, 23, -1,  3 },
    {  4, -1, 28, 21, 21, 21, 21, 21, 21, 21, 21, 27, -1, 28, 27, -1, 28, 21, 21, 21, 21, 21, 21, 21, 21, 27, -1,  3 },
    {  4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  3 },
    {  6, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,  5 }
};

class GameManager {
    public:
        GameManager();
        void initWindow();
        void initMaze();
        void initPellets();
        void initAgents();
        void loop();
        ~GameManager();
    private:
        sf::RenderWindow* window;
        Maze* maze;
        std::vector<Pellet*> pellets;
        Pakman* pakman;
        sf::Clock clock;

        void pollEvents();
        void update(float dt);
        void draw();
};